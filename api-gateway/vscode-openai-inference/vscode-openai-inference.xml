<policies>
    <inbound>
        <base />
        <check-header name="Authorization" failed-check-httpcode="401"
            failed-check-error-message="Not authorized" ignore-case="false" />
        <set-variable name="isValidToken"
            value="@{
            var auth = context.Request.Headers.GetValueOrDefault(" Authorization","");
            auth = auth.Replace("
            Bearer ", "");
            string[] tokens = auth.Split('.');
            if (tokens.Length != 3)
            {
                return false;
            }
            var signature = new HMACSHA256(Encoding.UTF8.GetBytes("
            {{azure-openai-token-hash}}")).ComputeHash(Encoding.UTF8.GetBytes($" {tokens[0]}.{tokens[1]}"));
            var jwtSignatureBase64UrlEncoded = Convert.ToBase64String(signature).Replace("/", " _").Replace(" +", " -"). Replace("=", "");

            var isValid = jwtSignatureBase64UrlEncoded == tokens[2];
            return isValid;
        }" />
        <choose>
            <when condition="@(!context.Variables.GetValueOrDefault<bool>(" isValidToken"))">
                <return-response>
                    <set-status code="401" reason="OK" />
                    <set-header name="Content-Type" exists-action="override">
                        <value>application/json</value>
                    </set-header>
                    <set-body template="liquid">
                        {
                        "statusCode": 401,
                        "message": "Not authorized"
                        }
                    </set-body>
                </return-response>
            </when>
        </choose>
        <set-header name="api-key" exists-action="override">
            <value>{{azure-openai-apikey}}</value>
        </set-header>
        <set-query-parameter name="api-version" exists-action="override">
            <value>2024-06-01</value>
        </set-query-parameter>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>